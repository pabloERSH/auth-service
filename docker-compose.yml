services:
  api:
    build: .
    container_name: auth_service
    restart: unless-stopped
    env_file: .env
    volumes:
      - logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - api_network

  db:
    image: postgres:15-alpine
    container_name: auth_service_db
    restart: unless-stopped
    env_file: .env
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - api_network

volumes:
  postgres_data:
  logs:

networks:
  api_network:
    driver: bridge